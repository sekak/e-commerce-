{"ast":null,"code":"// cas in just store \n// import { configureStore } from \"@reduxjs/toolkit\";\n// import cartReducer from \"./cartReducer\";\n\n// export const store = configureStore({\n//     reducer:{cart:cartReducer}\n// })\n\nimport cartReducer from \"./cartReducer\";\nimport userReducer from \"./userReducer\";\nimport { combineReducers, configureStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { PersistGate } from 'redux-persist/integration/react';\nconst rootReducer = combineReducers({\n  cart: cartReducer,\n  user: userReducer\n});\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage\n};\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: {\n    cart: persistedReducer,\n    user: userReducer\n  },\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport let persistor = persistStore(store);","map":{"version":3,"names":["cartReducer","userReducer","combineReducers","configureStore","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storage","PersistGate","rootReducer","cart","user","persistConfig","key","version","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","persistor"],"sources":["/home/med/Desktop/MERN/client/src/redux/store.js"],"sourcesContent":["\n// cas in just store \n// import { configureStore } from \"@reduxjs/toolkit\";\n// import cartReducer from \"./cartReducer\";\n\n// export const store = configureStore({\n//     reducer:{cart:cartReducer}\n// })\n\n\n\nimport cartReducer from \"./cartReducer\";\nimport userReducer from \"./userReducer\";\n\n \nimport { combineReducers, configureStore } from '@reduxjs/toolkit'\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { PersistGate } from 'redux-persist/integration/react'\n\nconst rootReducer = combineReducers({\n  cart: cartReducer,\n  user: userReducer\n});\n\nconst persistConfig = {\n  key: 'root',\n  version: 1,\n  storage\n};\n\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = configureStore({\n  reducer: {cart:persistedReducer, user:userReducer},\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n      },\n    }),\n})\n\nexport let persistor = persistStore(store)\n "],"mappings":"AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA,OAAOA,WAAW,MAAM,eAAe;AACvC,OAAOC,WAAW,MAAM,eAAe;AAGvC,SAASC,eAAe,EAAEC,cAAc,QAAQ,kBAAkB;AAClE,SACEC,YAAY,EACZC,cAAc,EACdC,KAAK,EACLC,SAAS,EACTC,KAAK,EACLC,OAAO,EACPC,KAAK,EACLC,QAAQ,QACH,eAAe;AACtB,OAAOC,OAAO,MAAM,2BAA2B;AAC/C,SAASC,WAAW,QAAQ,iCAAiC;AAE7D,MAAMC,WAAW,GAAGZ,eAAe,CAAC;EAClCa,IAAI,EAAEf,WAAW;EACjBgB,IAAI,EAAEf;AACR,CAAC,CAAC;AAEF,MAAMgB,aAAa,GAAG;EACpBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAE,CAAC;EACVP;AACF,CAAC;AAED,MAAMQ,gBAAgB,GAAGf,cAAc,CAACY,aAAa,EAAEH,WAAW,CAAC;AAEnE,OAAO,MAAMO,KAAK,GAAGlB,cAAc,CAAC;EAClCmB,OAAO,EAAE;IAACP,IAAI,EAACK,gBAAgB;IAAEJ,IAAI,EAACf;EAAW,CAAC;EAClDsB,UAAU,EAAGC,oBAAoB,IAC/BA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,cAAc,EAAE,CAACpB,KAAK,EAAEC,SAAS,EAAEC,KAAK,EAAEC,OAAO,EAAEC,KAAK,EAAEC,QAAQ;IACpE;EACF,CAAC;AACL,CAAC,CAAC;AAEF,OAAO,IAAIgB,SAAS,GAAGvB,YAAY,CAACiB,KAAK,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}