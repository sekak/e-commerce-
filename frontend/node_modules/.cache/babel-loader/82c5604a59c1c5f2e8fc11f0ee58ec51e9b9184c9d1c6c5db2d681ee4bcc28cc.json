{"ast":null,"code":"var _jsxFileName = \"/home/med/Desktop/MERN/client/src/List/List.jsx\";\nimport \"./List.scss\";\nimport Card from \"../components/Card/Card\";\nimport useFetched from \"../hook/useFetched\";\nimport { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst List = ({\n  data,\n  filter,\n  max,\n  sort\n}) => {\n  // const data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  // const filterArray = [2, 4, 6, 8];\n\n  // const filteredData = data.filter((number) => {\n  //   return filterArray.includes(number); // only keep numbers that exist in the filterArray\n  // });\n\n  // console.log(filteredData); // Output: [2, 4, 6, 8]\n\n  const filteredData = data.filter(item => {\n    return filter.includes(item.subCategories.inc); // only keep items that exist in the filter array\n  });\n\n  console.log(filteredData);\n  // const dataUpdate = data.filter(item=> console.log(item.subCategories.includes(filter.map(it=> it === ))))\n  // const update = data.filter(item => filter.map(it=> {return item.includes(it)}))\n  // console.log(\"this\", data.filter(item => filter.includes()))\n  // const [up,setUp]=useState([])\n  // useEffect(()=>{\n  //   const filr=async ()=>{\n  // //      await filter.map(it=>{\n  // //       console.log(it)\n  //     setUp( data.filter(item => item.subCategories.includes(filter)))\n  //     //  })\n  //   }\n  //   filr();\n  // },[filter])\n  // console.log(up)\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"list\",\n    children: data.map(item => /*#__PURE__*/_jsxDEV(Card, {\n      item: item\n    }, item.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 10\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_c = List;\nexport default List;\n\n// import \"./List.scss\";\n// import Card from \"../components/Card/Card\";\n// import useFetched from \"../hook/useFetched\";\n\n// const List = ({ params, sort, max, filter }) => {\n//   const { data, error, loading } = useFetched(\n//     `/products?populate=*&[filters][categories][title][$eq]=${params}${filter.map(\n//       (item) => `&[filters][sub_categories][title][$eq]=${item}`\n//     )}&[filters][price][$lt]=${max}&sort=price:${sort}`\n//   );\n//    return (\n//     <div className=\"list\">\n//       {error ? \"something is wrong!\" : loading ? \"loading\" : data.map((item) => (\n//          <Card item={item} key={item.id} />\n//       ))}\n//     </div>\n//   );\n// };\nvar _c;\n$RefreshReg$(_c, \"List\");","map":{"version":3,"names":["Card","useFetched","useState","useEffect","jsxDEV","_jsxDEV","List","data","filter","max","sort","filteredData","item","includes","subCategories","inc","console","log","className","children","map","id","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/med/Desktop/MERN/client/src/List/List.jsx"],"sourcesContent":["import \"./List.scss\";\nimport Card from \"../components/Card/Card\";\nimport useFetched from \"../hook/useFetched\";\nimport { useState,  useEffect } from \"react\";\n\nconst List = ({data, filter, max, sort}) => {\n  // const data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\n  // const filterArray = [2, 4, 6, 8];\n  \n  // const filteredData = data.filter((number) => {\n  //   return filterArray.includes(number); // only keep numbers that exist in the filterArray\n  // });\n  \n  // console.log(filteredData); // Output: [2, 4, 6, 8]\n\n  const filteredData = data.filter((item) => {\n    return filter.includes(item.subCategories.inc); // only keep items that exist in the filter array\n  });\n  console.log(filteredData)\n  // const dataUpdate = data.filter(item=> console.log(item.subCategories.includes(filter.map(it=> it === ))))\n  // const update = data.filter(item => filter.map(it=> {return item.includes(it)}))\n  // console.log(\"this\", data.filter(item => filter.includes()))\n  // const [up,setUp]=useState([])\n  // useEffect(()=>{\n  //   const filr=async ()=>{\n  // //      await filter.map(it=>{\n  // //       console.log(it)\n  //     setUp( data.filter(item => item.subCategories.includes(filter)))\n  //     //  })\n  //   }\n  //   filr();\n  // },[filter])\n  // console.log(up)\n   \n   return (\n    <div className=\"list\">\n      {data.map((item) => (\n         <Card item={item} key={item.id} />\n      ))}\n    </div>\n  );\n};\n\nexport default List;\n\n\n// import \"./List.scss\";\n// import Card from \"../components/Card/Card\";\n// import useFetched from \"../hook/useFetched\";\n\n// const List = ({ params, sort, max, filter }) => {\n//   const { data, error, loading } = useFetched(\n//     `/products?populate=*&[filters][categories][title][$eq]=${params}${filter.map(\n//       (item) => `&[filters][sub_categories][title][$eq]=${item}`\n//     )}&[filters][price][$lt]=${max}&sort=price:${sort}`\n//   );\n//    return (\n//     <div className=\"list\">\n//       {error ? \"something is wrong!\" : loading ? \"loading\" : data.map((item) => (\n//          <Card item={item} key={item.id} />\n//       ))}\n//     </div>\n//   );\n// };\n"],"mappings":";AAAA,OAAO,aAAa;AACpB,OAAOA,IAAI,MAAM,yBAAyB;AAC1C,OAAOC,UAAU,MAAM,oBAAoB;AAC3C,SAASC,QAAQ,EAAGC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,IAAI,GAAGA,CAAC;EAACC,IAAI;EAAEC,MAAM;EAAEC,GAAG;EAAEC;AAAI,CAAC,KAAK;EAC1C;EACA;;EAEA;EACA;EACA;;EAEA;;EAEA,MAAMC,YAAY,GAAGJ,IAAI,CAACC,MAAM,CAAEI,IAAI,IAAK;IACzC,OAAOJ,MAAM,CAACK,QAAQ,CAACD,IAAI,CAACE,aAAa,CAACC,GAAG,CAAC,CAAC,CAAC;EAClD,CAAC,CAAC;;EACFC,OAAO,CAACC,GAAG,CAACN,YAAY,CAAC;EACzB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEC,oBACCN,OAAA;IAAKa,SAAS,EAAC,MAAM;IAAAC,QAAA,EAClBZ,IAAI,CAACa,GAAG,CAAER,IAAI,iBACZP,OAAA,CAACL,IAAI;MAACY,IAAI,EAAEA;IAAK,GAAMA,IAAI,CAACS,EAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CACnC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GApCIpB,IAAI;AAsCV,eAAeA,IAAI;;AAGnB;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}